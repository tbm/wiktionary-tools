#!/usr/bin/env python3

"""
Add category to Wiktionry entry
"""

import sys

import click
import kamusi
import pywikibot


def check_category(site, category, lang):
    """
    Check whether a category page exists
    """
    # We can't use pywikibot.Category because that redirects to the
    # Wiktionary for lang
    title = "Category" + ":" + lang + ":" + category
    page = pywikibot.Page(site, title)
    return page.exists()


def check_category_autocat(site, category, lang):
    """
    Check whether a category uses {{auto cat}}
    """
    title = "Category" + ":" + lang + ":" + category
    page = pywikibot.Page(site, title)
    if "{{auto cat}}" in page.text:
        return True
    if "{{autocat}}" in page.text:
        return True
    return False


def create_category(site, category, lang, text):
    """
    Create a category page for a specific language
    """
    title = "Category" + ":" + lang + ":" + category
    page = pywikibot.Page(site, title)
    page.text = text
    changelog = text
    page.save(changelog, minor=False)


@click.command()
@click.argument("page")
@click.argument("category")
@click.option("--lang", default="sw", help="Language code")
def add_category_page(page, category, lang):
    """
    Add category to page
    """

    site = pywikibot.Site("en", "wiktionary")
    for cat in category.split("|"):
        if not check_category(site, cat, "en"):
            print(f"Category {cat} doesn't exist")
            sys.exit(1)
        if not check_category_autocat(site, cat, "en"):
            print(f"Category {cat} is not '{{{{auto cat}}}}'")
            sys.exit(1)
    page = pywikibot.Page(site, page)
    old_text = kamusi.get_entry(page.text, lang)
    if not old_text:
        print(f"No page {page} for language {lang}")
        sys.exit(1)
    new_text = kamusi.add_category(old_text, category, lang)
    if old_text == new_text:
        print("No change")
        sys.exit(1)
    changelog = kamusi.format_changelog(lang, "Add category")
    print(kamusi.colour_diff(old_text, new_text))
    edit = input("Store edit (Y/n): ")
    if not edit.upper() == "N":
        page.text = page.text.replace(old_text, new_text)
        page.save(changelog, minor=False)
    for cat in category.split("|"):
        if not check_category(site, cat, lang):
            print(f"Creating category {cat} for language {lang}")
            create_category(site, category, lang, "{{auto cat}}\n")


if __name__ == "__main__":
    add_category_page()  # pylint: disable=no-value-for-parameter
